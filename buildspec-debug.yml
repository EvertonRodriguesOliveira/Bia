version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    IMAGE_REPO_NAME: bia

phases:
  pre_build:
    commands:
      - echo Fazendo login no ECR...
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo "Account ID: $AWS_ACCOUNT_ID"
      - echo "Region: $AWS_DEFAULT_REGION"
      - echo "Repository: $IMAGE_REPO_NAME"
      
      # Login no ECR
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      
      # Definir variáveis
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "Repository URI: $REPOSITORY_URI"
      
      # Definir tag da imagem
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Image Tag: $IMAGE_TAG"
      
  build:
    commands:
      - echo Build iniciado em `date`
      - echo Gerando imagem da BIA...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo "Imagens criadas:"
      - docker images | grep $IMAGE_REPO_NAME
      
  post_build:
    commands:
      - echo Build finalizado com sucesso em `date`
      - echo "Verificando variáveis antes do push:"
      - echo "REPOSITORY_URI: $REPOSITORY_URI"
      - echo "IMAGE_TAG: $IMAGE_TAG"
      
      - echo Fazendo push da imagem para o ECR...
      
      # Push com tratamento de erro
      - |
        if docker push $REPOSITORY_URI:latest; then
          echo "Push da tag latest realizado com sucesso"
        else
          echo "Erro no push da tag latest"
          exit 1
        fi
      
      - |
        if docker push $REPOSITORY_URI:$IMAGE_TAG; then
          echo "Push da tag $IMAGE_TAG realizado com sucesso"
        else
          echo "Erro no push da tag $IMAGE_TAG"
          exit 1
        fi
      
      - echo Gerando artefato da imagem para o ECS
      - printf '[{"name":"bia","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Conteúdo do imagedefinitions.json:"
      - cat imagedefinitions.json

artifacts:
  files: imagedefinitions.json
